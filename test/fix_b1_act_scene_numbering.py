"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏ –∞–∫—Ç–æ–≤ –∏ —Å—Ü–µ–Ω –≤ B1 —É—Ä–æ–∫–∞—Ö
–ü—Ä–∏–≤–æ–¥–∏—Ç –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å —Ä–µ–∞–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π "–ö–æ—Ä–æ–ª—è –õ–∏—Ä–∞"
–î–∞—Ç–∞: 07.01.2025
"""

import json
from pathlib import Path

# –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞–∫—Ç–æ–≤ –∏ —Å—Ü–µ–Ω –ø–æ –ø—å–µ—Å–µ "–ö–æ—Ä–æ–ª—å –õ–∏—Ä"
CORRECT_STRUCTURE = {
    "01_–¢—Ä–æ–Ω–Ω—ã–π_–∑–∞–ª_B1.json": {
        "act": "I",
        "scene": "1", 
        "title": "–¢–†–û–ù–ù–´–ô –ó–ê–õ",
        "description": "–î–µ–ª–µ–Ω–∏–µ –∫–æ—Ä–æ–ª–µ–≤—Å—Ç–≤–∞"
    },
    "02_–ò—Å–ø—ã—Ç–∞–Ω–∏–µ_–ª—é–±–≤–∏_B1.json": {
        "act": "I",
        "scene": "1",
        "title": "–ò–°–ü–´–¢–ê–ù–ò–ï –õ–Æ–ë–í–ò",
        "description": "–ò—Å–ø—ã—Ç–∞–Ω–∏–µ –¥–æ—á–µ—Ä–µ–π"
    },
    "03_–ò–∑–≥–Ω–∞–Ω–∏–µ_–ö–æ—Ä–¥–µ–ª–∏–∏_B1.json": {
        "act": "I",
        "scene": "1",
        "title": "–ò–ó–ì–ù–ê–ù–ò–ï –ö–û–†–î–ï–õ–ò–ò",
        "description": "–ò–∑–≥–Ω–∞–Ω–∏–µ –ö–æ—Ä–¥–µ–ª–∏–∏ –∏ –ö–µ–Ω—Ç–∞"
    },
    "04_–ò–Ω—Ç—Ä–∏–≥–∞_–≠–¥–º—É–Ω–¥–∞_B1.json": {
        "act": "I",
        "scene": "2",
        "title": "–ò–ù–¢–†–ò–ì–ê –≠–î–ú–£–ù–î–ê",
        "description": "–ó–∞–º–æ–∫ –ì–ª–æ—Å—Ç–µ—Ä–∞"
    },
    "05_–û–±–º–∞–Ω_–ì–ª–æ—Å—Ç–µ—Ä–∞_B1.json": {
        "act": "I",
        "scene": "2",
        "title": "–û–ë–ú–ê–ù –ì–õ–û–°–¢–ï–†–ê",
        "description": "–≠–¥–º—É–Ω–¥ –æ–±–º–∞–Ω—ã–≤–∞–µ—Ç –æ—Ç—Ü–∞"
    },
    "06_–£–Ω–∏–∂–µ–Ω–∏–µ_–õ–∏—Ä–∞_B1.json": {
        "act": "I",
        "scene": "4",
        "title": "–£–ù–ò–ñ–ï–ù–ò–ï –õ–ò–†–ê",
        "description": "–ö–æ–Ω—Ñ–ª–∏–∫—Ç —Å –ì–æ–Ω–µ—Ä–∏–ª—å–µ–π"
    },
    "07_–ë—É—Ä—è_–∏_–±–µ–∑—É–º–∏–µ_B1.json": {
        "act": "III",
        "scene": "2",
        "title": "–ë–£–†–Ø –ò –ë–ï–ó–£–ú–ò–ï",
        "description": "–õ–∏—Ä –≤ –±—É—Ä–µ"
    },
    "08_–í—Å—Ç—Ä–µ—á–∞_—Å_–¢–æ–º–æ–º_B1.json": {
        "act": "III",
        "scene": "4",
        "title": "–í–°–¢–†–ï–ß–ê –° –¢–û–ú–û–ú",
        "description": "–≠–¥–≥–∞—Ä –∫–∞–∫ –¢–æ–º –∏–∑ –ë–µ–¥–ª–∞–º–∞"
    },
    "09_–û—Å–ª–µ–ø–ª–µ–Ω–∏–µ_–ì–ª–æ—Å—Ç–µ—Ä–∞_B1.json": {
        "act": "III",
        "scene": "7",
        "title": "–û–°–õ–ï–ü–õ–ï–ù–ò–ï –ì–õ–û–°–¢–ï–†–ê",
        "description": "–ñ–µ—Å—Ç–æ–∫–æ—Å—Ç—å –ö–æ—Ä–Ω—É–æ–ª–ª–∞ –∏ –†–µ–≥–∞–Ω—ã"
    },
    "10_–î—É–≤—Ä—Å–∫–∏–µ_—Å–∫–∞–ª—ã_B1.json": {
        "act": "IV",
        "scene": "6",
        "title": "–î–£–í–†–°–ö–ò–ï –°–ö–ê–õ–´",
        "description": "–ú–Ω–∏–º–æ–µ —Å–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ –ì–ª–æ—Å—Ç–µ—Ä–∞"
    },
    "11_–ü—Ä–∏–º–∏—Ä–µ–Ω–∏–µ_—Å_–ö–æ—Ä–¥–µ–ª–∏–µ–π_B1.json": {
        "act": "IV",
        "scene": "7",
        "title": "–ü–†–ò–ú–ò–†–ï–ù–ò–ï –° –ö–û–†–î–ï–õ–ò–ï–ô",
        "description": "–í—Å—Ç—Ä–µ—á–∞ –æ—Ç—Ü–∞ –∏ –¥–æ—á–µ—Ä–∏"
    },
    "12_–ü—Ä–æ–∑—Ä–µ–Ω–∏–µ_–õ–∏—Ä–∞_B1.json": {
        "act": "IV",
        "scene": "6",
        "title": "–ü–†–û–ó–†–ï–ù–ò–ï –õ–ò–†–ê",
        "description": "–ë–µ–∑—É–º–∏–µ –∏ –º—É–¥—Ä–æ—Å—Ç—å"
    },
    "13_–ë–∏—Ç–≤–∞_B1.json": {
        "act": "V",
        "scene": "2",
        "title": "–ë–ò–¢–í–ê",
        "description": "–í–æ–π–Ω–∞ –∏ –ø–æ—Ä–∞–∂–µ–Ω–∏–µ"
    },
    "14_–î—É—ç–ª—å_–±—Ä–∞—Ç—å–µ–≤_B1.json": {
        "act": "V",
        "scene": "3",
        "title": "–î–£–≠–õ–¨ –ë–†–ê–¢–¨–ï–í",
        "description": "–≠–¥–≥–∞—Ä –ø—Ä–æ—Ç–∏–≤ –≠–¥–º—É–Ω–¥–∞"
    },
    "15_–°–º–µ—Ä—Ç—å_–ö–æ—Ä–¥–µ–ª–∏–∏_–∏_–õ–∏—Ä–∞_B1.json": {
        "act": "V",
        "scene": "3",
        "title": "–§–ò–ù–ê–õ",
        "description": "–¢—Ä–∞–≥–∏—á–µ—Å–∫–∞—è —Ä–∞–∑–≤—è–∑–∫–∞"
    }
}

def analyze_current_structure():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É B1 —É—Ä–æ–∫–æ–≤"""
    b1_dir = Path(r'F:\AiKlientBank\Lir\data\b1')
    
    print("[ANALYSIS] –¢–µ–∫—É—â–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ B1 —É—Ä–æ–∫–æ–≤:")
    print("=" * 80)
    
    for file_path in sorted(b1_dir.glob('*.json')):
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
            title = data.get('title', 'NO TITLE')
            filename = file_path.name
            
            correct = CORRECT_STRUCTURE.get(filename, {})
            correct_act = correct.get('act', '?')
            correct_scene = correct.get('scene', '?')
            
            # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∞–∫—Ç –∏ —Å—Ü–µ–Ω—É –∏–∑ title
            current_act = '?'
            current_scene = '?'
            
            if '–ê–ö–¢' in title:
                parts = title.split(',')
                if len(parts) > 0:
                    act_part = parts[0].strip()
                    if '–ê–ö–¢' in act_part:
                        current_act = act_part.split('–ê–ö–¢')[1].strip().split()[0]
                    
                    if len(parts) > 1:
                        scene_part = parts[1].strip()
                        if '–°–¶–ï–ù–ê' in scene_part:
                            current_scene = scene_part.split('–°–¶–ï–ù–ê')[1].split(':')[0].strip()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
            match = '‚úì' if (current_act == correct_act and current_scene == correct_scene) else '‚úó'
            
            print(f"\n{filename}")
            print(f"  –¢–µ–∫—É—â–µ–µ: –ê–ö–¢ {current_act}, –°–¶–ï–ù–ê {current_scene}")
            print(f"  –î–æ–ª–∂–Ω–æ:  –ê–ö–¢ {correct_act}, –°–¶–ï–ù–ê {correct_scene}")
            print(f"  –°—Ç–∞—Ç—É—Å:  [{match}] {correct.get('description', '')}")
    
    print("\n" + "=" * 80)

def fix_act_scene_numbering(dry_run=True):
    """–ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –Ω—É–º–µ—Ä–∞—Ü–∏—é –∞–∫—Ç–æ–≤ –∏ —Å—Ü–µ–Ω –≤ B1 —É—Ä–æ–∫–∞—Ö"""
    b1_dir = Path(r'F:\AiKlientBank\Lir\data\b1')
    updated_count = 0
    
    print(f"\n[FIX] {'DRY RUN' if dry_run else 'UPDATING'} B1 —É—Ä–æ–∫–æ–≤:")
    print("=" * 80)
    
    for filename, correct_info in CORRECT_STRUCTURE.items():
        file_path = b1_dir / filename
        
        if not file_path.exists():
            print(f"[!] –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {filename}")
            continue
            
        with open(file_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        old_title = data.get('title', '')
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        new_title = f"üé≠ –ê–ö–¢ {correct_info['act']}, –°–¶–ï–ù–ê {correct_info['scene']}: {correct_info['title']}"
        
        if old_title != new_title:
            print(f"\n{filename}")
            print(f"  OLD: {old_title}")
            print(f"  NEW: {new_title}")
            
            if not dry_run:
                data['title'] = new_title
                with open(file_path, 'w', encoding='utf-8') as f:
                    json.dump(data, f, ensure_ascii=False, indent=2)
                print(f"  [OK] –û–±–Ω–æ–≤–ª–µ–Ω–æ")
            else:
                print(f"  [DRY] –ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ")
                
            updated_count += 1
        else:
            print(f"\n{filename}: [OK] –£–∂–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    print(f"\n{'=' * 80}")
    print(f"[SUMMARY] {'–ë—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–æ' if dry_run else '–û–±–Ω–æ–≤–ª–µ–Ω–æ'}: {updated_count} —Ñ–∞–π–ª–æ–≤")
    return updated_count

if __name__ == "__main__":
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
    analyze_current_structure()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤ dry-run —Ä–µ–∂–∏–º–µ
    print("\n" + "=" * 80)
    print("[INFO] –ó–∞–ø—É—Å–∫ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ DRY-RUN —Ä–µ–∂–∏–º–µ")
    print("=" * 80)
    
    updated = fix_act_scene_numbering(dry_run=True)
    
    if updated > 0:
        print("\n[?] –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è? (—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫—É –Ω–∏–∂–µ)")
        # fix_act_scene_numbering(dry_run=False)
        print("# fix_act_scene_numbering(dry_run=False)")
