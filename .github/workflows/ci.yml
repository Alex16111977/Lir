name: Lir CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-xvfb  # For GUI tests if needed
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
      continue-on-error: true
    
    - name: Test with pytest
      run: |
        pytest test/ -v --tb=short
      continue-on-error: true
    
    - name: Test main application
      run: |
        python -c "import src.core.config_manager; import src.core.logger_manager; import src.core.orchestrator; print('✅ Core modules import successfully')"
        python -c "from pathlib import Path; assert Path('data').exists(), 'Data directory missing'; print('✅ Data directory exists')"
        python -c "import json; files = list(Path('data').rglob('*.json')); assert len(files) >= 51, f'Expected 51+ JSON files, found {len(files)}'; print(f'✅ Found {len(files)} JSON files')" 

  build-website:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Generate website
      run: |
        python main.py
      continue-on-error: true
    
    - name: Archive website artifacts
      uses: actions/upload-artifact@v3
      with:
        name: lir-website
        path: output/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security scan
      uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements.txt
      continue-on-error: true
